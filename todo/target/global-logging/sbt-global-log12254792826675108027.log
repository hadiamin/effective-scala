[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.1 (Amazon.com Inc. Java 11.0.15)
[debug]       Load.loadUnit: plugins took 16.7661ms
[debug]       Load.loadUnit: defsScala took 0.0038ms
[debug] [Loading] Scanning directory C:\Users\amin.hadi\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\amin.hadi\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.919499 ms
[debug]           Load.resolveProject(global-plugins) took 0.900201ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\amin.hadi\.sbt\1.0\plugins, plugins: List(<none>))) took 2.1656ms
[debug] [Loading] Done in C:\Users\amin.hadi\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 2.8464ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.0063ms
[debug]     Load.loadUnit(file:/C:/Users/amin.hadi/.sbt/1.0/plugins/, ...) took 20.2902ms
[debug]   Load.apply: load took 21.1939ms
[debug]   Load.apply: resolveProjects took 0.066501ms
[debug]   Load.apply: finalTransforms took 2.9295ms
[debug]   Load.apply: config.delegates took 0.1798ms
[debug]   Load.apply: Def.make(settings)... took 26.6036ms
[debug]   Load.apply: structureIndex took 7.2728ms
[debug]   Load.apply: mkStreams took 0.0033ms
[info] loading global plugins from C:\Users\amin.hadi\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 135.8828ms
[debug]           Load.loadUnit: plugins took 10.742999ms
[debug]           Load.loadUnit: defsScala took 0.0016ms
[debug] [Loading] Scanning directory C:\Users\amin.hadi\Documents\GitHub\effective-scala\todo\project
[debug]             Load.loadUnit: mkEval took 0.1468ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\amin.hadi\Documents\GitHub\effective-scala\todo\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.5896 ms
[info] loading settings for project todo-build from buildSettings.sbt,plugins.sbt,idea3.sbt ...
[debug]               Load.resolveProject(todo-build) took 1.259199ms
[debug]             Load.loadTransitive: finalizeProject(Project(id todo-build, base: C:\Users\amin.hadi\Documents\GitHub\effective-scala\todo\project, plugins: List(<none>))) took 2.063ms
[debug] [Loading] Done in C:\Users\amin.hadi\Documents\GitHub\effective-scala\todo\project, returning: (todo-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 29.9663ms
[debug]           Load.loadUnit: cleanEvalClasses took 1.378ms
[debug]         Load.loadUnit(file:/C:/Users/amin.hadi/Documents/GitHub/effective-scala/todo/project/, ...) took 42.5817ms
[debug]       Load.apply: load took 43.1592ms
[debug]       Load.apply: resolveProjects took 0.0613ms
[debug]       Load.apply: finalTransforms took 2.942001ms
[debug]       Load.apply: config.delegates took 0.1544ms
[debug]       Load.apply: Def.make(settings)... took 28.4548ms
[debug]       Load.apply: structureIndex took 7.291301ms
[debug]       Load.apply: mkStreams took 0.0029ms
[info] loading project definition from C:\Users\amin.hadi\Documents\GitHub\effective-scala\todo\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Canceling execution...
[error] Cancelled: loadp
[error] Cancelled: loadp
[error] Use 'last' for the full log.
[debug] > Exec(loadFailed, None, None)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
[debug] > Exec(last, None, None)
[debug] > Exec(loadFailed, None, None)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
[warn] Project loading failed: (r)etry, (q)uit, (l)ast, or (i)gnore? (default: r)
